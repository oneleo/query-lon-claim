enum MethodName {
  claimPeriod
  claimPeriods
  execute
  unknown
}

type Claimed @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  recipient: Bytes! # address
  balance: BigInt! # uint256
  balancePerPeriod: [BigInt!]! # uint256[]
  periods: [BigInt!]! # uint256[]
  periodsLength: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  transactionMethodId: Bytes!
  transactionMethodName: MethodName!
}

type ClaimedPerPeriod @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  recipient: Bytes! # address
  period: BigInt! # using u64.MAX_VALUE as null
  balance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  transactionMethodId: Bytes!
  transactionMethodName: MethodName!
}

type TotalClaimed @entity(immutable: false) {
  id: Bytes! # is always Bytes.fromI32(1)
  countClaimed: BigInt! # uint256
  countPeriod: BigInt! # uint256
  totalBalance: BigInt! # uint256
}

type TotalClaimedPerFrom @entity(immutable: false) {
  id: Bytes! # equals the from
  from: Bytes! # address
  countPeriod: BigInt! # uint256
  totalBalance: BigInt! # uint256
}

type TotalClaimedPerRecipient @entity(immutable: false) {
  id: Bytes! # equals the recipient
  recipient: Bytes! # address
  countPeriod: BigInt! # uint256
  totalBalance: BigInt! # uint256
}

type OwnerChanged @entity(immutable: true) {
  id: Bytes!
  oldOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnerNominated @entity(immutable: true) {
  id: Bytes!
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
